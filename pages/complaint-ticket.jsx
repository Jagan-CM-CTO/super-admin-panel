import Sidebar from "@/components/Sidebar";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import {
  useToast,
  Text,
  Table,
  Thead,
  Divider,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
  Flex,
  Button,
  Icon,
  Badge,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  useDisclosure,
  FormControl,
  Input,
  FormLabel,
  Textarea,
  NumberInput,
  NumberIncrementStepper,
  NumberDecrementStepper,
  NumberInputStepper,
  NumberInputField,
  Select,
} from "@chakra-ui/react";

import { MdDeleteOutline } from "react-icons/md";
import axios from "axios";
import { useRouter } from "next/router";
import { isAuthenticated } from "@/helper/auth";
import { API_URL } from "@/helper/api";

const ViewTicketModel = ({ ticket }) => {
  const { isOpen, onOpen, onClose } = useDisclosure();

  return (
    <>
      <Button colorScheme="brand.400" bg="brand.400" size="md" onClick={onOpen}>
        View Ticket
      </Button>
      <Modal isOpen={isOpen} onClose={onClose}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Ticket Details</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            <Text fontSize={"sm"} as={"b"}>
              Ticket ID
            </Text>
            <Text mb={2}>{ticket.id}</Text>
            <Divider />
            <Text fontSize={"sm"} as={"b"} mt={8}>
              subject
            </Text>
            <Text mb={2}>{ticket.attributes.subject}</Text>
            <Divider />
            <Text fontSize={"sm"} as={"b"} mt={8}>
              Message
            </Text>
            <Text mb={2}>{ticket.attributes.message}</Text>
          </ModalBody>

          <ModalFooter>
            <Button colorScheme="blue" mr={3} onClick={onClose}>
              Close
            </Button>
          </ModalFooter>
        </ModalContent>
      </Modal>
    </>
  );
};

const ComplaintTicket = () => {
  const [complaintTickets, setComplaintTickets] = useState([]);

  const auth = isAuthenticated();
  const jwt = auth.data?.jwt;
  const getComplaintTickets = async () => {
    let res = await axios.get(`${API_URL}complaint-tickets?populate=*`, {
      headers: {
        Authorization: `Bearer ${jwt}`,
      },
    });
    return res;
  };

  useEffect(() => {
    getComplaintTickets()
      .then((data) => {
        setComplaintTickets(data.data.data);
      })
      .catch((e) => {
        console.log(e);
      });
  }, []);

  return (
    <>
      <Head>
        <title>Peace Garden</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Sidebar>
          <Flex justify={"space-between"}>
            <Text fontSize={"2xl"} fontWeight={"semibold"}>
              Complaint Tickets
            </Text>
          </Flex>

          <TableContainer bg={"#fff"} rounded={10} shadow={30} mt={5}>
            <Table variant="simple">
              <Thead>
                <Tr>
                  <Th>Ticket ID</Th>
                  <Th>{`Sent by`}</Th>
                  <Th>Contact Email</Th>
                  <Th>Comtact Number</Th>
                  <Th>Actions</Th>
                </Tr>
              </Thead>
              <Tbody>
                {complaintTickets?.map((ticket, i) => {
                  return (
                    <Tr key={i}>
                      <Td>{ticket.id}</Td>
                      <Td>
                        <Text>{ticket.attributes.full_name}</Text>
                      </Td>
                      <Td>{ticket.attributes.contact_email}</Td>
                      <Td>{ticket.attributes.contact_number}</Td>
                      <Td>
                        <ViewTicketModel ticket={ticket} />
                      </Td>
                    </Tr>
                  );
                })}
              </Tbody>
            </Table>
          </TableContainer>
        </Sidebar>
      </main>
    </>
  );
};

export default ComplaintTicket;
